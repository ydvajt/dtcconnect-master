from telebot import TeleBot, types
import datetime
import consts
import sqlite3
bot = TeleBot(consts.token)
start_day = datetime.datetime(2017, 5, 1, 17, 00)
now = datetime.datetime.now()

conn = sqlite3.connect('my.db', check_same_thread=False)
c = conn.cursor()

@bot.message_handler(commands=['start'])
def handle_start(message):
    markup = types.ReplyKeyboardMarkup()
    markup.row(types.KeyboardButton('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–æ–∏–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º',request_location=True))
    bot.send_message(message.chat.id, '–£—Ç—Ä–µ—á–∫–∞ ‚úåÔ∏è –¢—ã —Å–µ–π—á–∞—Å –≥–¥–µ?', reply_markup=markup)
    add_user(message.from_user.first_name,
             message.from_user.username,
             message.from_user.last_name,
             str(message.from_user.id),
             0)
    print("yay!")

@bot.message_handler(content_types=['location'])
def handle_location(message):

    upd = bot.get_updates()
    last_update = upd[-1]
    msg_from_user = last_update.message
    location = msg_from_user.location
    longitude = location.longitude
    latitude = location.latitude

    bot.send_message(message.chat.id,distance(latitude,longitude))
    is_here=distance(latitude,longitude)[1]

    c.execute('SELECT * FROM users')
    row = c.fetchone()
    while row is not None:
        if int(row[4]) == msg_from_user.from_user.id:
            at=row[5]
            print(at==26)
            if is_here == True:
                user_markup = types.ReplyKeyboardMarkup()
                user_markup.row('—Ç–µ–º–Ω–æ–µ –ø–æ–ª–æ, —Å–≤–µ—Ç–ª—ã–µ –¥–∂–∏–Ω—Å—ã', '–∞—Ä–∞–±—Å–∫–∞—è –ø–∞—Ä–∞–Ω–∂–∞')
                user_markup.row('—Ü–≤–µ—Ç–æ—á–Ω–æ–µ –ø–ª–∞—Ç—å–µ', '–∫–ª–æ—É–Ω—Å–∫–∏–π –ø–∞—Ä–∏–∫')
                bot.send_message(message.chat.id, "–í–æ —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –æ–¥–µ—Ç –î–∞–≥–∞—Ä?", reply_markup=user_markup)

                @bot.message_handler(content_types=['text'])
                def handle_text(msg):
                    upd = bot.get_updates()
                    last_update = upd[-1]
                    msg_from_user = last_update.message
                    if msg_from_user.text == '—Ç–µ–º–Ω–æ–µ –ø–æ–ª–æ, —Å–≤–µ—Ç–ª—ã–µ –¥–∂–∏–Ω—Å—ã':
                        counter=at+1
                        print(counter)
                        c.execute("UPDATE users SET attend=%s WHERE user_id=%s" % (counter, msg_from_user.from_user.id))
                        user_markup = types.ReplyKeyboardMarkup()
                        user_markup.row('/game')
                        bot.send_message(msg.chat.id, '–ú–æ–ª–æ–¥–µ—Ü, —Ö–æ—Ä–æ—à–µ–≥–æ —Ç–µ–±–µ –¥–Ω—è! üòÑ',reply_markup=user_markup)
                    else:
                        bot.send_message(msg_from_user.chat.id, '–•–∞, –ø–æ–ø–∞–ª—Å—è! –õ—É—á—à–µ –±—ã —Ç–µ–±–µ –ø–æ—Ç–æ—Ä–æ–ø–∏—Ç—å—Å—è –≤ –∞—É–¥–∏—Ç–æ—Ä–∏—éüò°')
            else:
                bot.send_message(message.chat.id, "–ë–µ–≥–∏, " + msg_from_user.from_user.first_name)
        row = c.fetchone()

@bot.message_handler(commands=['game'])
def handle_game(message):
    delta = now - start_day
    diff_days=delta.days
    c.execute('SELECT * FROM users')
    row = c.fetchone()
    print(message.from_user.id)
    while row is not None:
        # print(row[4])
        if int(row[4]) == message.from_user.id:
            attendance = row[5]/(diff_days-diff_days/6)
            total = attendance*100
            bot.send_message(message.chat.id, (row[1]+" "+row[3]+" - attendance:"+" "+str(total)[0:4]+'%'))
            row = c.fetchone()

            if(total <= 100 and total > 80):
                bot.send_message(message.chat.id, '–ò–∑ —Ç–µ–±—è –≤—ã–π–¥–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞! –û—Ç–ª–∏—á–Ω–∞—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—åüëç')
            elif (total <= 80 and total > 50):
                bot.send_message(message.chat.id, '–°—Ç–æ–∏—Ç –Ω–µ–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è –∏ –≤—Å–µ –±—É–¥–µ—Ç. –ì–ª–∞–≤–Ω–æ–µ - –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –ø–æ—á–∞—â–µü§î')
            elif (total <= 50 and total > 20):
                bot.send_message(message.chat.id, '–ö—Ç–æ-—Ç–æ —Å–æ–≤—Å–µ–º —Ä–∞–∑–ª–µ–Ω–∏–ª—Å—è, –∏ –Ω—É–∂–Ω–æ —Å—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–µ–µ –∑–∞ —Å–≤–æ–µ –±—É–¥—É—â–µ–µüòõ')
            else:
                bot.send_message(message.chat.id, '–ê —ç—Ç–æ —É–∂–µ —Å–µ—Ä—å–µ–∑–Ω–æ! –ú–æ–∂–µ—Ç —Å—Ç–æ–∏—Ç –Ω–∞–∫–æ–Ω–µ—Ü –∑–∞–¥—É–º–∞—Ç—å—Å—è?!!üòï')
        row = c.fetchone()

@bot.message_handler(commands=['all_game'])
def handle_allgame(message):
    delta = now - start_day
    diff_days=delta.days
    c.execute('SELECT * FROM users')
    row = c.fetchone()
    print(message.from_user.id)
    while row is not None:
        # print(row[4])
        attendance = row[5] / (diff_days - diff_days / 6)
        total = attendance * 100
        bot.send_message(message.chat.id, (row[1] + " " + row[3] + " - attendance:" + " " + str(total)[0:4] + '%'))
        row = c.fetchone()

@bot.message_handler(commands=['help'])
def handle_help(message):
    bot.send_message(message.chat.id,'/game - —É–∑–Ω–∞—Ç—å —Å–≤–æ—é –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å \n /lesson - –æ—Ç–º–µ—Ç–∏—Ç—å—Å—è –Ω–∞ —É—Ä–æ–∫–µ')

@bot.message_handler(commands=['lesson'])
def handle_lesson(message):
    markup = types.ReplyKeyboardMarkup()
    markup.row(types.KeyboardButton('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–æ–∏–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º', request_location=True))
    bot.send_message(message.chat.id, '–ü–æ–π—Ç–∏ –Ω–∞ —É—Ä–æ–∫', reply_markup=markup)

@bot.message_handler(commands=['team'])
def handle_team(message):
    bot.send_message(message.chat.id, '–°–¥–µ–ª–∞–Ω–∞ —Å–∞–º–æ–π –¥—Ä—É–∂–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π \n üë©‚Äçüíª - Alina D –¥–∏–∑–∞–π–Ω–µ—Ä \n üë©‚Äçüé§ - Madina D –º—É–∑–∞ \nüë®‚Äç‚öñÔ∏è - Andrei K –¥—É—à–∞ \nü§¥  - Ali T –∫–∞–ø–∏—Ç–∞–Ω \n ')

def distance(lat,lon):
    cx = 51.1493317 #—à–∏—Ä–æ—Ç–∞
    cy = 71.37946940000006 #–¥–æ–ª–≥–æ—Ç–∞
    result=""
    is_here=False

    mx = abs(lat - cx)
    my = abs(lon - cy)

    dist = (mx ** 2 + my ** 2) ** 0.5
    min_dist = 0.2 #60 –º
    dist=dist*100
    if dist<=min_dist:
        result="–ö—Ä–∞—Å–∞–≤—á–∏–∫. –¢—ã —É—Å–ø–µ–ª!"
        is_here=True
    elif dist>min_dist:
        result="–°–∞–º–∞—Ç –∑–∞ —Ç–æ–±–æ–π –≤—ã–µ—Ö–∞–ª!\n"+"–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ "+str(dist)[0:4]+" –∫–º –æ—Ç —É–Ω–∏–≤–µ—Ä–∞"
    return result,is_here

def add_user(first,name,last,user_id,attend):
    c.execute("INSERT INTO users (first_name,username,last_name,user_id,attend) VALUES ('%s','%s','%s','%s','%s')"%(first,name,last,user_id,attend))
    conn.commit()


bot.polling(none_stop=True, interval=0)